// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot nlb test: all alarms - 0 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Alarm7103F465": Object {
      "Properties": Object {
        "DashboardBody": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"widgets\\":[{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":4,\\"x\\":0,\\"y\\":0,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"annotations\\":{\\"alarms\\":[\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ScopeTestDummyNetworkLoadBalancerHealthyTasksWarning4E5A0F2D",
                  "Arn",
                ],
              },
              "\\"]},\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":4,\\"x\\":6,\\"y\\":0,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"annotations\\":{\\"alarms\\":[\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ScopeTestDummyNetworkLoadBalancerUnhealthyTasksWarningC5CE52E5",
                  "Arn",
                ],
              },
              "\\"]},\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":4,\\"x\\":12,\\"y\\":0,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"annotations\\":{\\"alarms\\":[\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ScopeTestDummyNetworkLoadBalancerHealthyTaskPercentWarning54405290",
                  "Arn",
                ],
              },
              "\\"]},\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":4,\\"x\\":18,\\"y\\":0,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"annotations\\":{\\"alarms\\":[\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ScopeTestDummyNetworkLoadBalancerProcessedBytesMinWarning153EE6ED",
                  "Arn",
                ],
              },
              "\\"]},\\"yAxis\\":{}}}]}",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "NLB55158F82": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internal",
        "Subnets": Array [
          Object {
            "Ref": "VpcPrivateSubnet1Subnet536B997A",
          },
          Object {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
          },
        ],
        "Type": "network",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "NLBListener96C8170F": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "NLBListenerTargetGroupA6463B24",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "NLB55158F82",
        },
        "Port": 80,
        "Protocol": "TCP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "NLBListenerTargetGroupA6463B24": Object {
      "Properties": Object {
        "Port": 80,
        "Protocol": "TCP",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "Resource": Object {
      "Properties": Object {
        "DashboardBody": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"widgets\\":[{\\"type\\":\\"text\\",\\"width\\":24,\\"height\\":1,\\"x\\":0,\\"y\\":0,\\"properties\\":{\\"markdown\\":\\"### Network Load Balancer **Default/NLB-Default/NLB/Listener/TargetGroup**\\"}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":5,\\"x\\":0,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"TCP Flows\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/NetworkELB\\",\\"ActiveFlowCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "NLB55158F82",
                  "LoadBalancerFullName",
                ],
              },
              "\\",{\\"label\\":\\"Active\\"}],[\\"AWS/NetworkELB\\",\\"NewFlowCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "NLB55158F82",
                  "LoadBalancerFullName",
                ],
              },
              "\\",{\\"label\\":\\"New\\",\\"stat\\":\\"Sum\\"}],[\\"AWS/NetworkELB\\",\\"ProcessedBytes\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "NLB55158F82",
                  "LoadBalancerFullName",
                ],
              },
              "\\",{\\"label\\":\\"Processed Bytes (min)\\",\\"stat\\":\\"Minimum\\",\\"yAxis\\":\\"right\\"}]],\\"yAxis\\":{\\"left\\":{\\"min\\":0,\\"label\\":\\"Count\\",\\"showUnits\\":false},\\"right\\":{\\"min\\":0,\\"label\\":\\"bytes\\",\\"showUnits\\":false}}}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":5,\\"x\\":12,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Task Health\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/NetworkELB\\",\\"HealthyHostCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "/",
              Object {
                "Fn::Select": Array [
                  2,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "/",
              Object {
                "Fn::Select": Array [
                  3,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "\\",\\"TargetGroup\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "NLBListenerTargetGroupA6463B24",
                  "TargetGroupFullName",
                ],
              },
              "\\",{\\"color\\":\\"#2ca02c\\",\\"label\\":\\"Healthy Tasks\\",\\"stat\\":\\"Minimum\\"}],[\\"AWS/NetworkELB\\",\\"UnHealthyHostCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "/",
              Object {
                "Fn::Select": Array [
                  2,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "/",
              Object {
                "Fn::Select": Array [
                  3,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "\\",\\"TargetGroup\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "NLBListenerTargetGroupA6463B24",
                  "TargetGroupFullName",
                ],
              },
              "\\",{\\"color\\":\\"#d62728\\",\\"label\\":\\"Unhealthy Tasks\\",\\"stat\\":\\"Maximum\\"}]],\\"annotations\\":{\\"horizontal\\":[{\\"label\\":\\"Healthy Tasks < 3 for 3 datapoints within 15 minutes\\",\\"value\\":3,\\"yAxis\\":\\"left\\"},{\\"label\\":\\"Unhealthy Tasks > 3 for 3 datapoints within 15 minutes\\",\\"value\\":3,\\"yAxis\\":\\"left\\"}]},\\"yAxis\\":{\\"left\\":{\\"min\\":0,\\"label\\":\\"Count\\",\\"showUnits\\":false}}}}]}",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "ScopeTestDummyNetworkLoadBalancerHealthyTaskPercentWarning54405290": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Percentage of healthy tasks is too low.",
        "AlarmName": "Test-DummyNetworkLoadBalancer-Healthy-Task-Percent-Warning",
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Expression": "(healthyTaskCount / (healthyTaskCount + unhealthyTaskCount)) * 100",
            "Id": "expr_1",
            "Label": "Healthy Task Percent",
          },
          Object {
            "Id": "healthyTaskCount",
            "Label": "Healthy Tasks",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          Object {
                            "Fn::Select": Array [
                              1,
                              Object {
                                "Fn::Split": Array [
                                  "/",
                                  Object {
                                    "Ref": "NLBListener96C8170F",
                                  },
                                ],
                              },
                            ],
                          },
                          "/",
                          Object {
                            "Fn::Select": Array [
                              2,
                              Object {
                                "Fn::Split": Array [
                                  "/",
                                  Object {
                                    "Ref": "NLBListener96C8170F",
                                  },
                                ],
                              },
                            ],
                          },
                          "/",
                          Object {
                            "Fn::Select": Array [
                              3,
                              Object {
                                "Fn::Split": Array [
                                  "/",
                                  Object {
                                    "Ref": "NLBListener96C8170F",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      ],
                    },
                  },
                  Object {
                    "Name": "TargetGroup",
                    "Value": Object {
                      "Fn::GetAtt": Array [
                        "NLBListenerTargetGroupA6463B24",
                        "TargetGroupFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "HealthyHostCount",
                "Namespace": "AWS/NetworkELB",
              },
              "Period": 300,
              "Stat": "Minimum",
            },
            "ReturnData": false,
          },
          Object {
            "Id": "unhealthyTaskCount",
            "Label": "Unhealthy Tasks",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          Object {
                            "Fn::Select": Array [
                              1,
                              Object {
                                "Fn::Split": Array [
                                  "/",
                                  Object {
                                    "Ref": "NLBListener96C8170F",
                                  },
                                ],
                              },
                            ],
                          },
                          "/",
                          Object {
                            "Fn::Select": Array [
                              2,
                              Object {
                                "Fn::Split": Array [
                                  "/",
                                  Object {
                                    "Ref": "NLBListener96C8170F",
                                  },
                                ],
                              },
                            ],
                          },
                          "/",
                          Object {
                            "Fn::Select": Array [
                              3,
                              Object {
                                "Fn::Split": Array [
                                  "/",
                                  Object {
                                    "Ref": "NLBListener96C8170F",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      ],
                    },
                  },
                  Object {
                    "Name": "TargetGroup",
                    "Value": Object {
                      "Fn::GetAtt": Array [
                        "NLBListenerTargetGroupA6463B24",
                        "TargetGroupFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "UnHealthyHostCount",
                "Namespace": "AWS/NetworkELB",
              },
              "Period": 300,
              "Stat": "Maximum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 75,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyNetworkLoadBalancerHealthyTasksWarning4E5A0F2D": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Number of healthy tasks is too low.",
        "AlarmName": "Test-DummyNetworkLoadBalancer-Healthy-Tasks-Warning",
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Healthy Tasks",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          Object {
                            "Fn::Select": Array [
                              1,
                              Object {
                                "Fn::Split": Array [
                                  "/",
                                  Object {
                                    "Ref": "NLBListener96C8170F",
                                  },
                                ],
                              },
                            ],
                          },
                          "/",
                          Object {
                            "Fn::Select": Array [
                              2,
                              Object {
                                "Fn::Split": Array [
                                  "/",
                                  Object {
                                    "Ref": "NLBListener96C8170F",
                                  },
                                ],
                              },
                            ],
                          },
                          "/",
                          Object {
                            "Fn::Select": Array [
                              3,
                              Object {
                                "Fn::Split": Array [
                                  "/",
                                  Object {
                                    "Ref": "NLBListener96C8170F",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      ],
                    },
                  },
                  Object {
                    "Name": "TargetGroup",
                    "Value": Object {
                      "Fn::GetAtt": Array [
                        "NLBListenerTargetGroupA6463B24",
                        "TargetGroupFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "HealthyHostCount",
                "Namespace": "AWS/NetworkELB",
              },
              "Period": 300,
              "Stat": "Minimum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 3,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyNetworkLoadBalancerProcessedBytesMinWarning153EE6ED": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Minimum number of processed bytes is too low.",
        "AlarmName": "Test-DummyNetworkLoadBalancer-Processed-Bytes-Min-Warning",
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Processed Bytes (min)",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": Object {
                      "Fn::GetAtt": Array [
                        "NLB55158F82",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "ProcessedBytes",
                "Namespace": "AWS/NetworkELB",
              },
              "Period": 300,
              "Stat": "Minimum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 1024,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyNetworkLoadBalancerUnhealthyTasksWarningC5CE52E5": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Number of unhealthy tasks is too high.",
        "AlarmName": "Test-DummyNetworkLoadBalancer-Unhealthy-Tasks-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Unhealthy Tasks",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          Object {
                            "Fn::Select": Array [
                              1,
                              Object {
                                "Fn::Split": Array [
                                  "/",
                                  Object {
                                    "Ref": "NLBListener96C8170F",
                                  },
                                ],
                              },
                            ],
                          },
                          "/",
                          Object {
                            "Fn::Select": Array [
                              2,
                              Object {
                                "Fn::Split": Array [
                                  "/",
                                  Object {
                                    "Ref": "NLBListener96C8170F",
                                  },
                                ],
                              },
                            ],
                          },
                          "/",
                          Object {
                            "Fn::Select": Array [
                              3,
                              Object {
                                "Fn::Split": Array [
                                  "/",
                                  Object {
                                    "Ref": "NLBListener96C8170F",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      ],
                    },
                  },
                  Object {
                    "Name": "TargetGroup",
                    "Value": Object {
                      "Fn::GetAtt": Array [
                        "NLBListenerTargetGroupA6463B24",
                        "TargetGroupFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "UnHealthyHostCount",
                "Namespace": "AWS/NetworkELB",
              },
              "Period": 300,
              "Stat": "Maximum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 3,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Summary68521F81": Object {
      "Properties": Object {
        "DashboardBody": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"widgets\\":[{\\"type\\":\\"text\\",\\"width\\":24,\\"height\\":1,\\"x\\":0,\\"y\\":0,\\"properties\\":{\\"markdown\\":\\"### Network Load Balancer **Default/NLB-Default/NLB/Listener/TargetGroup**\\"}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":6,\\"x\\":0,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"TCP Flows\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/NetworkELB\\",\\"ActiveFlowCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "NLB55158F82",
                  "LoadBalancerFullName",
                ],
              },
              "\\",{\\"label\\":\\"Active\\"}],[\\"AWS/NetworkELB\\",\\"NewFlowCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "NLB55158F82",
                  "LoadBalancerFullName",
                ],
              },
              "\\",{\\"label\\":\\"New\\",\\"stat\\":\\"Sum\\"}],[\\"AWS/NetworkELB\\",\\"ProcessedBytes\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "NLB55158F82",
                  "LoadBalancerFullName",
                ],
              },
              "\\",{\\"label\\":\\"Processed Bytes (min)\\",\\"stat\\":\\"Minimum\\",\\"yAxis\\":\\"right\\"}]],\\"yAxis\\":{\\"left\\":{\\"min\\":0,\\"label\\":\\"Count\\",\\"showUnits\\":false},\\"right\\":{\\"min\\":0,\\"label\\":\\"bytes\\",\\"showUnits\\":false}}}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":6,\\"x\\":12,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Task Health\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/NetworkELB\\",\\"HealthyHostCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "/",
              Object {
                "Fn::Select": Array [
                  2,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "/",
              Object {
                "Fn::Select": Array [
                  3,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "\\",\\"TargetGroup\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "NLBListenerTargetGroupA6463B24",
                  "TargetGroupFullName",
                ],
              },
              "\\",{\\"color\\":\\"#2ca02c\\",\\"label\\":\\"Healthy Tasks\\",\\"stat\\":\\"Minimum\\"}],[\\"AWS/NetworkELB\\",\\"UnHealthyHostCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "/",
              Object {
                "Fn::Select": Array [
                  2,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "/",
              Object {
                "Fn::Select": Array [
                  3,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "\\",\\"TargetGroup\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "NLBListenerTargetGroupA6463B24",
                  "TargetGroupFullName",
                ],
              },
              "\\",{\\"color\\":\\"#d62728\\",\\"label\\":\\"Unhealthy Tasks\\",\\"stat\\":\\"Maximum\\"}]],\\"annotations\\":{\\"horizontal\\":[{\\"label\\":\\"Healthy Tasks < 3 for 3 datapoints within 15 minutes\\",\\"value\\":3,\\"yAxis\\":\\"left\\"},{\\"label\\":\\"Unhealthy Tasks > 3 for 3 datapoints within 15 minutes\\",\\"value\\":3,\\"yAxis\\":\\"left\\"}]},\\"yAxis\\":{\\"left\\":{\\"min\\":0,\\"label\\":\\"Count\\",\\"showUnits\\":false}}}}]}",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "Vpc8378EB38": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": Object {
      "DependsOn": Array [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2EIP3C605A87": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet2NATGateway9182C01D": Object {
      "DependsOn": Array [
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcPublicSubnet2EIP3C605A87",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet2RouteTable94F7E489": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot nlb test: all alarms - 1 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Alarm7103F465": Object {
      "Properties": Object {
        "DashboardBody": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"widgets\\":[{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":4,\\"x\\":0,\\"y\\":0,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"annotations\\":{\\"alarms\\":[\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ScopeTestDummyNetworkLoadBalancerHealthyTasksWarning4E5A0F2D",
                  "Arn",
                ],
              },
              "\\"]},\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":4,\\"x\\":6,\\"y\\":0,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"annotations\\":{\\"alarms\\":[\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ScopeTestDummyNetworkLoadBalancerUnhealthyTasksWarningC5CE52E5",
                  "Arn",
                ],
              },
              "\\"]},\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":4,\\"x\\":12,\\"y\\":0,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"annotations\\":{\\"alarms\\":[\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ScopeTestDummyNetworkLoadBalancerHealthyTaskPercentWarning54405290",
                  "Arn",
                ],
              },
              "\\"]},\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":4,\\"x\\":18,\\"y\\":0,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"annotations\\":{\\"alarms\\":[\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ScopeTestDummyNetworkLoadBalancerProcessedBytesMinWarning153EE6ED",
                  "Arn",
                ],
              },
              "\\"]},\\"yAxis\\":{}}}]}",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "Resource": Object {
      "Properties": Object {
        "DashboardBody": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"widgets\\":[{\\"type\\":\\"text\\",\\"width\\":24,\\"height\\":1,\\"x\\":0,\\"y\\":0,\\"properties\\":{\\"markdown\\":\\"### Network Load Balancer **Default/ImportedNLB-Default/ImportedNetworkTargetGroup**\\"}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":5,\\"x\\":0,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"TCP Flows\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/NetworkELB\\",\\"ActiveFlowCount\\",\\"LoadBalancer\\",\\"network/my-load-balancer/50dc6c495c0c9188\\",{\\"label\\":\\"Active\\"}],[\\"AWS/NetworkELB\\",\\"NewFlowCount\\",\\"LoadBalancer\\",\\"network/my-load-balancer/50dc6c495c0c9188\\",{\\"label\\":\\"New\\",\\"stat\\":\\"Sum\\"}],[\\"AWS/NetworkELB\\",\\"ProcessedBytes\\",\\"LoadBalancer\\",\\"network/my-load-balancer/50dc6c495c0c9188\\",{\\"label\\":\\"Processed Bytes (min)\\",\\"stat\\":\\"Minimum\\",\\"yAxis\\":\\"right\\"}]],\\"yAxis\\":{\\"left\\":{\\"min\\":0,\\"label\\":\\"Count\\",\\"showUnits\\":false},\\"right\\":{\\"min\\":0,\\"label\\":\\"bytes\\",\\"showUnits\\":false}}}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":5,\\"x\\":12,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Task Health\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/NetworkELB\\",\\"HealthyHostCount\\",\\"LoadBalancer\\",\\"network/my-load-balancer/50dc6c495c0c9188\\",\\"TargetGroup\\",\\"targetgroup/my-target-group/50dc6c495c0c9188\\",{\\"color\\":\\"#2ca02c\\",\\"label\\":\\"Healthy Tasks\\",\\"stat\\":\\"Minimum\\"}],[\\"AWS/NetworkELB\\",\\"UnHealthyHostCount\\",\\"LoadBalancer\\",\\"network/my-load-balancer/50dc6c495c0c9188\\",\\"TargetGroup\\",\\"targetgroup/my-target-group/50dc6c495c0c9188\\",{\\"color\\":\\"#d62728\\",\\"label\\":\\"Unhealthy Tasks\\",\\"stat\\":\\"Maximum\\"}]],\\"annotations\\":{\\"horizontal\\":[{\\"label\\":\\"Healthy Tasks < 3 for 3 datapoints within 15 minutes\\",\\"value\\":3,\\"yAxis\\":\\"left\\"},{\\"label\\":\\"Unhealthy Tasks > 3 for 3 datapoints within 15 minutes\\",\\"value\\":3,\\"yAxis\\":\\"left\\"}]},\\"yAxis\\":{\\"left\\":{\\"min\\":0,\\"label\\":\\"Count\\",\\"showUnits\\":false}}}}]}",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "ScopeTestDummyNetworkLoadBalancerHealthyTaskPercentWarning54405290": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Percentage of healthy tasks is too low.",
        "AlarmName": "Test-DummyNetworkLoadBalancer-Healthy-Task-Percent-Warning",
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Expression": "(healthyTaskCount / (healthyTaskCount + unhealthyTaskCount)) * 100",
            "Id": "expr_1",
            "Label": "Healthy Task Percent",
          },
          Object {
            "Id": "healthyTaskCount",
            "Label": "Healthy Tasks",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": "network/my-load-balancer/50dc6c495c0c9188",
                  },
                  Object {
                    "Name": "TargetGroup",
                    "Value": "targetgroup/my-target-group/50dc6c495c0c9188",
                  },
                ],
                "MetricName": "HealthyHostCount",
                "Namespace": "AWS/NetworkELB",
              },
              "Period": 300,
              "Stat": "Minimum",
            },
            "ReturnData": false,
          },
          Object {
            "Id": "unhealthyTaskCount",
            "Label": "Unhealthy Tasks",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": "network/my-load-balancer/50dc6c495c0c9188",
                  },
                  Object {
                    "Name": "TargetGroup",
                    "Value": "targetgroup/my-target-group/50dc6c495c0c9188",
                  },
                ],
                "MetricName": "UnHealthyHostCount",
                "Namespace": "AWS/NetworkELB",
              },
              "Period": 300,
              "Stat": "Maximum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 75,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyNetworkLoadBalancerHealthyTasksWarning4E5A0F2D": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Number of healthy tasks is too low.",
        "AlarmName": "Test-DummyNetworkLoadBalancer-Healthy-Tasks-Warning",
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Healthy Tasks",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": "network/my-load-balancer/50dc6c495c0c9188",
                  },
                  Object {
                    "Name": "TargetGroup",
                    "Value": "targetgroup/my-target-group/50dc6c495c0c9188",
                  },
                ],
                "MetricName": "HealthyHostCount",
                "Namespace": "AWS/NetworkELB",
              },
              "Period": 300,
              "Stat": "Minimum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 3,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyNetworkLoadBalancerProcessedBytesMinWarning153EE6ED": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Minimum number of processed bytes is too low.",
        "AlarmName": "Test-DummyNetworkLoadBalancer-Processed-Bytes-Min-Warning",
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Processed Bytes (min)",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": "network/my-load-balancer/50dc6c495c0c9188",
                  },
                ],
                "MetricName": "ProcessedBytes",
                "Namespace": "AWS/NetworkELB",
              },
              "Period": 300,
              "Stat": "Minimum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 1024,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyNetworkLoadBalancerUnhealthyTasksWarningC5CE52E5": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Number of unhealthy tasks is too high.",
        "AlarmName": "Test-DummyNetworkLoadBalancer-Unhealthy-Tasks-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Unhealthy Tasks",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": "network/my-load-balancer/50dc6c495c0c9188",
                  },
                  Object {
                    "Name": "TargetGroup",
                    "Value": "targetgroup/my-target-group/50dc6c495c0c9188",
                  },
                ],
                "MetricName": "UnHealthyHostCount",
                "Namespace": "AWS/NetworkELB",
              },
              "Period": 300,
              "Stat": "Maximum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 3,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Summary68521F81": Object {
      "Properties": Object {
        "DashboardBody": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"widgets\\":[{\\"type\\":\\"text\\",\\"width\\":24,\\"height\\":1,\\"x\\":0,\\"y\\":0,\\"properties\\":{\\"markdown\\":\\"### Network Load Balancer **Default/ImportedNLB-Default/ImportedNetworkTargetGroup**\\"}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":6,\\"x\\":0,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"TCP Flows\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/NetworkELB\\",\\"ActiveFlowCount\\",\\"LoadBalancer\\",\\"network/my-load-balancer/50dc6c495c0c9188\\",{\\"label\\":\\"Active\\"}],[\\"AWS/NetworkELB\\",\\"NewFlowCount\\",\\"LoadBalancer\\",\\"network/my-load-balancer/50dc6c495c0c9188\\",{\\"label\\":\\"New\\",\\"stat\\":\\"Sum\\"}],[\\"AWS/NetworkELB\\",\\"ProcessedBytes\\",\\"LoadBalancer\\",\\"network/my-load-balancer/50dc6c495c0c9188\\",{\\"label\\":\\"Processed Bytes (min)\\",\\"stat\\":\\"Minimum\\",\\"yAxis\\":\\"right\\"}]],\\"yAxis\\":{\\"left\\":{\\"min\\":0,\\"label\\":\\"Count\\",\\"showUnits\\":false},\\"right\\":{\\"min\\":0,\\"label\\":\\"bytes\\",\\"showUnits\\":false}}}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":6,\\"x\\":12,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Task Health\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/NetworkELB\\",\\"HealthyHostCount\\",\\"LoadBalancer\\",\\"network/my-load-balancer/50dc6c495c0c9188\\",\\"TargetGroup\\",\\"targetgroup/my-target-group/50dc6c495c0c9188\\",{\\"color\\":\\"#2ca02c\\",\\"label\\":\\"Healthy Tasks\\",\\"stat\\":\\"Minimum\\"}],[\\"AWS/NetworkELB\\",\\"UnHealthyHostCount\\",\\"LoadBalancer\\",\\"network/my-load-balancer/50dc6c495c0c9188\\",\\"TargetGroup\\",\\"targetgroup/my-target-group/50dc6c495c0c9188\\",{\\"color\\":\\"#d62728\\",\\"label\\":\\"Unhealthy Tasks\\",\\"stat\\":\\"Maximum\\"}]],\\"annotations\\":{\\"horizontal\\":[{\\"label\\":\\"Healthy Tasks < 3 for 3 datapoints within 15 minutes\\",\\"value\\":3,\\"yAxis\\":\\"left\\"},{\\"label\\":\\"Unhealthy Tasks > 3 for 3 datapoints within 15 minutes\\",\\"value\\":3,\\"yAxis\\":\\"left\\"}]},\\"yAxis\\":{\\"left\\":{\\"min\\":0,\\"label\\":\\"Count\\",\\"showUnits\\":false}}}}]}",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot nlb test: no alarms - 0 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Alarm7103F465": Object {
      "Properties": Object {
        "DashboardBody": "{\\"widgets\\":[]}",
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "NLB55158F82": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internal",
        "Subnets": Array [
          Object {
            "Ref": "VpcPrivateSubnet1Subnet536B997A",
          },
          Object {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
          },
        ],
        "Type": "network",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "NLBListener96C8170F": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "NLBListenerTargetGroupA6463B24",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "NLB55158F82",
        },
        "Port": 80,
        "Protocol": "TCP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "NLBListenerTargetGroupA6463B24": Object {
      "Properties": Object {
        "Port": 80,
        "Protocol": "TCP",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "Resource": Object {
      "Properties": Object {
        "DashboardBody": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"widgets\\":[{\\"type\\":\\"text\\",\\"width\\":24,\\"height\\":1,\\"x\\":0,\\"y\\":0,\\"properties\\":{\\"markdown\\":\\"### Network Load Balancer **Default/NLB-Default/NLB/Listener/TargetGroup**\\"}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":5,\\"x\\":0,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"TCP Flows\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/NetworkELB\\",\\"ActiveFlowCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "NLB55158F82",
                  "LoadBalancerFullName",
                ],
              },
              "\\",{\\"label\\":\\"Active\\"}],[\\"AWS/NetworkELB\\",\\"NewFlowCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "NLB55158F82",
                  "LoadBalancerFullName",
                ],
              },
              "\\",{\\"label\\":\\"New\\",\\"stat\\":\\"Sum\\"}],[\\"AWS/NetworkELB\\",\\"ProcessedBytes\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "NLB55158F82",
                  "LoadBalancerFullName",
                ],
              },
              "\\",{\\"label\\":\\"Processed Bytes (min)\\",\\"stat\\":\\"Minimum\\",\\"yAxis\\":\\"right\\"}]],\\"yAxis\\":{\\"left\\":{\\"min\\":0,\\"label\\":\\"Count\\",\\"showUnits\\":false},\\"right\\":{\\"min\\":0,\\"label\\":\\"bytes\\",\\"showUnits\\":false}}}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":5,\\"x\\":12,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Task Health\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/NetworkELB\\",\\"HealthyHostCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "/",
              Object {
                "Fn::Select": Array [
                  2,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "/",
              Object {
                "Fn::Select": Array [
                  3,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "\\",\\"TargetGroup\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "NLBListenerTargetGroupA6463B24",
                  "TargetGroupFullName",
                ],
              },
              "\\",{\\"color\\":\\"#2ca02c\\",\\"label\\":\\"Healthy Tasks\\",\\"stat\\":\\"Minimum\\"}],[\\"AWS/NetworkELB\\",\\"UnHealthyHostCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "/",
              Object {
                "Fn::Select": Array [
                  2,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "/",
              Object {
                "Fn::Select": Array [
                  3,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "\\",\\"TargetGroup\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "NLBListenerTargetGroupA6463B24",
                  "TargetGroupFullName",
                ],
              },
              "\\",{\\"color\\":\\"#d62728\\",\\"label\\":\\"Unhealthy Tasks\\",\\"stat\\":\\"Maximum\\"}]],\\"yAxis\\":{\\"left\\":{\\"min\\":0,\\"label\\":\\"Count\\",\\"showUnits\\":false}}}}]}",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "Summary68521F81": Object {
      "Properties": Object {
        "DashboardBody": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"widgets\\":[{\\"type\\":\\"text\\",\\"width\\":24,\\"height\\":1,\\"x\\":0,\\"y\\":0,\\"properties\\":{\\"markdown\\":\\"### Network Load Balancer **Default/NLB-Default/NLB/Listener/TargetGroup**\\"}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":6,\\"x\\":0,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"TCP Flows\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/NetworkELB\\",\\"ActiveFlowCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "NLB55158F82",
                  "LoadBalancerFullName",
                ],
              },
              "\\",{\\"label\\":\\"Active\\"}],[\\"AWS/NetworkELB\\",\\"NewFlowCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "NLB55158F82",
                  "LoadBalancerFullName",
                ],
              },
              "\\",{\\"label\\":\\"New\\",\\"stat\\":\\"Sum\\"}],[\\"AWS/NetworkELB\\",\\"ProcessedBytes\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "NLB55158F82",
                  "LoadBalancerFullName",
                ],
              },
              "\\",{\\"label\\":\\"Processed Bytes (min)\\",\\"stat\\":\\"Minimum\\",\\"yAxis\\":\\"right\\"}]],\\"yAxis\\":{\\"left\\":{\\"min\\":0,\\"label\\":\\"Count\\",\\"showUnits\\":false},\\"right\\":{\\"min\\":0,\\"label\\":\\"bytes\\",\\"showUnits\\":false}}}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":6,\\"x\\":12,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Task Health\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/NetworkELB\\",\\"HealthyHostCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "/",
              Object {
                "Fn::Select": Array [
                  2,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "/",
              Object {
                "Fn::Select": Array [
                  3,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "\\",\\"TargetGroup\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "NLBListenerTargetGroupA6463B24",
                  "TargetGroupFullName",
                ],
              },
              "\\",{\\"color\\":\\"#2ca02c\\",\\"label\\":\\"Healthy Tasks\\",\\"stat\\":\\"Minimum\\"}],[\\"AWS/NetworkELB\\",\\"UnHealthyHostCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "/",
              Object {
                "Fn::Select": Array [
                  2,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "/",
              Object {
                "Fn::Select": Array [
                  3,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Ref": "NLBListener96C8170F",
                      },
                    ],
                  },
                ],
              },
              "\\",\\"TargetGroup\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "NLBListenerTargetGroupA6463B24",
                  "TargetGroupFullName",
                ],
              },
              "\\",{\\"color\\":\\"#d62728\\",\\"label\\":\\"Unhealthy Tasks\\",\\"stat\\":\\"Maximum\\"}]],\\"yAxis\\":{\\"left\\":{\\"min\\":0,\\"label\\":\\"Count\\",\\"showUnits\\":false}}}}]}",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "Vpc8378EB38": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": Object {
      "DependsOn": Array [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2EIP3C605A87": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet2NATGateway9182C01D": Object {
      "DependsOn": Array [
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcPublicSubnet2EIP3C605A87",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet2RouteTable94F7E489": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot nlb test: no alarms - 1 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Alarm7103F465": Object {
      "Properties": Object {
        "DashboardBody": "{\\"widgets\\":[]}",
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "Resource": Object {
      "Properties": Object {
        "DashboardBody": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"widgets\\":[{\\"type\\":\\"text\\",\\"width\\":24,\\"height\\":1,\\"x\\":0,\\"y\\":0,\\"properties\\":{\\"markdown\\":\\"### Network Load Balancer **Default/ImportedNLB-Default/ImportedNetworkTargetGroup**\\"}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":5,\\"x\\":0,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"TCP Flows\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/NetworkELB\\",\\"ActiveFlowCount\\",\\"LoadBalancer\\",\\"network/my-load-balancer/50dc6c495c0c9188\\",{\\"label\\":\\"Active\\"}],[\\"AWS/NetworkELB\\",\\"NewFlowCount\\",\\"LoadBalancer\\",\\"network/my-load-balancer/50dc6c495c0c9188\\",{\\"label\\":\\"New\\",\\"stat\\":\\"Sum\\"}],[\\"AWS/NetworkELB\\",\\"ProcessedBytes\\",\\"LoadBalancer\\",\\"network/my-load-balancer/50dc6c495c0c9188\\",{\\"label\\":\\"Processed Bytes (min)\\",\\"stat\\":\\"Minimum\\",\\"yAxis\\":\\"right\\"}]],\\"yAxis\\":{\\"left\\":{\\"min\\":0,\\"label\\":\\"Count\\",\\"showUnits\\":false},\\"right\\":{\\"min\\":0,\\"label\\":\\"bytes\\",\\"showUnits\\":false}}}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":5,\\"x\\":12,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Task Health\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/NetworkELB\\",\\"HealthyHostCount\\",\\"LoadBalancer\\",\\"network/my-load-balancer/50dc6c495c0c9188\\",\\"TargetGroup\\",\\"targetgroup/my-target-group/50dc6c495c0c9188\\",{\\"color\\":\\"#2ca02c\\",\\"label\\":\\"Healthy Tasks\\",\\"stat\\":\\"Minimum\\"}],[\\"AWS/NetworkELB\\",\\"UnHealthyHostCount\\",\\"LoadBalancer\\",\\"network/my-load-balancer/50dc6c495c0c9188\\",\\"TargetGroup\\",\\"targetgroup/my-target-group/50dc6c495c0c9188\\",{\\"color\\":\\"#d62728\\",\\"label\\":\\"Unhealthy Tasks\\",\\"stat\\":\\"Maximum\\"}]],\\"yAxis\\":{\\"left\\":{\\"min\\":0,\\"label\\":\\"Count\\",\\"showUnits\\":false}}}}]}",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "Summary68521F81": Object {
      "Properties": Object {
        "DashboardBody": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"widgets\\":[{\\"type\\":\\"text\\",\\"width\\":24,\\"height\\":1,\\"x\\":0,\\"y\\":0,\\"properties\\":{\\"markdown\\":\\"### Network Load Balancer **Default/ImportedNLB-Default/ImportedNetworkTargetGroup**\\"}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":6,\\"x\\":0,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"TCP Flows\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/NetworkELB\\",\\"ActiveFlowCount\\",\\"LoadBalancer\\",\\"network/my-load-balancer/50dc6c495c0c9188\\",{\\"label\\":\\"Active\\"}],[\\"AWS/NetworkELB\\",\\"NewFlowCount\\",\\"LoadBalancer\\",\\"network/my-load-balancer/50dc6c495c0c9188\\",{\\"label\\":\\"New\\",\\"stat\\":\\"Sum\\"}],[\\"AWS/NetworkELB\\",\\"ProcessedBytes\\",\\"LoadBalancer\\",\\"network/my-load-balancer/50dc6c495c0c9188\\",{\\"label\\":\\"Processed Bytes (min)\\",\\"stat\\":\\"Minimum\\",\\"yAxis\\":\\"right\\"}]],\\"yAxis\\":{\\"left\\":{\\"min\\":0,\\"label\\":\\"Count\\",\\"showUnits\\":false},\\"right\\":{\\"min\\":0,\\"label\\":\\"bytes\\",\\"showUnits\\":false}}}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":6,\\"x\\":12,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Task Health\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/NetworkELB\\",\\"HealthyHostCount\\",\\"LoadBalancer\\",\\"network/my-load-balancer/50dc6c495c0c9188\\",\\"TargetGroup\\",\\"targetgroup/my-target-group/50dc6c495c0c9188\\",{\\"color\\":\\"#2ca02c\\",\\"label\\":\\"Healthy Tasks\\",\\"stat\\":\\"Minimum\\"}],[\\"AWS/NetworkELB\\",\\"UnHealthyHostCount\\",\\"LoadBalancer\\",\\"network/my-load-balancer/50dc6c495c0c9188\\",\\"TargetGroup\\",\\"targetgroup/my-target-group/50dc6c495c0c9188\\",{\\"color\\":\\"#d62728\\",\\"label\\":\\"Unhealthy Tasks\\",\\"stat\\":\\"Maximum\\"}]],\\"yAxis\\":{\\"left\\":{\\"min\\":0,\\"label\\":\\"Count\\",\\"showUnits\\":false}}}}]}",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
