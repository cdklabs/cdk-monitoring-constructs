// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot test: all alarms 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Function76856677": Object {
      "DependsOn": Array [
        "FunctionServiceRole675BB04A",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "{}",
        },
        "FunctionName": "DummyLambda",
        "Handler": "Dummy::handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "FunctionServiceRole675BB04A",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "FunctionServiceRole675BB04A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ScopeTestDummyLambdaFaultCountWarning33B0A193": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Fault count is too high.",
        "AlarmName": "Test-DummyLambda-Fault-Count-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 20,
        "EvaluationPeriods": 20,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Faults",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Sum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 2,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaFaultRateWarningE6A1BB2B": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Fault rate is too high.",
        "AlarmName": "Test-DummyLambda-Fault-Rate-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 10,
        "EvaluationPeriods": 10,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Faults (avg)",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Average",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaIteratorAgeMaxWarning2BC5030F": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Iterator Max Age is too high.",
        "AlarmName": "Test-DummyLambda-Iterator-Age-Max-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Iterator Age",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "IteratorAge",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Maximum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 1000000,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaLatencyP50WarningE50DF463": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "P50 latency is too high.",
        "AlarmName": "Test-DummyLambda-Latency-P50-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 11,
        "EvaluationPeriods": 11,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "P50",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Duration",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "p50",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 110,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaLatencyP90Warning670FFADC": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "P90 latency is too high.",
        "AlarmName": "Test-DummyLambda-Latency-P90-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 22,
        "EvaluationPeriods": 22,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "P90",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Duration",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "p90",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 220,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaLatencyP99WarningDDA8F353": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "P99 latency is too high.",
        "AlarmName": "Test-DummyLambda-Latency-P99-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 33,
        "EvaluationPeriods": 33,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "P99",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Duration",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "p99",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 330,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaMaxTPSWarning0EC2023E": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "TPS is too high.",
        "AlarmName": "Test-DummyLambda-MaxTPS-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 1,
        "EvaluationPeriods": 1,
        "Metrics": Array [
          Object {
            "Expression": "FILL(requests,0) / PERIOD(requests)",
            "Id": "expr_1",
            "Label": "TPS",
          },
          Object {
            "Id": "requests",
            "Label": "Invocations",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaMinTPSWarning30EF1FB4": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "TPS is too low.",
        "AlarmName": "Test-DummyLambda-MinTPS-Warning",
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "EvaluationPeriods": 1,
        "Metrics": Array [
          Object {
            "Expression": "FILL(requests,0) / PERIOD(requests)",
            "Id": "expr_1",
            "Label": "TPS",
          },
          Object {
            "Id": "requests",
            "Label": "Invocations",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 0,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaRunningTasksHighCritical357223A5": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Number of running tasks are too high.",
        "AlarmName": "Test-DummyLambda-Running-Tasks-High-Critical",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Provisioned Concurrency Spillovers",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "ProvisionedConcurrencySpilloverInvocations",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Sum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaRunningTasksHighWarning2A06F60A": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Number of running tasks are too high.",
        "AlarmName": "Test-DummyLambda-Running-Tasks-High-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Concurrent",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "ConcurrentExecutions",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Maximum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaThrottledCountWarning946A5E19": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Throttled count is too high.",
        "AlarmName": "Test-DummyLambda-Throttled-Count-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 20,
        "EvaluationPeriods": 20,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Throttles",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Throttles",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Sum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 2,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaThrottledRateWarning6EB21772": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Throttled rate is too high.",
        "AlarmName": "Test-DummyLambda-Throttled-Rate-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 10,
        "EvaluationPeriods": 10,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Throttles (avg)",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Throttles",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Average",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot test: all alarms 2`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Function76856677": Object {
      "DependsOn": Array [
        "FunctionServiceRole675BB04A",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "{}",
        },
        "FunctionName": "DummyLambda",
        "Handler": "Dummy::handler",
        "Layers": Array [
          "arn:aws:lambda:us-west-1:580247275435:layer:LambdaInsightsExtension:14",
        ],
        "Role": Object {
          "Fn::GetAtt": Array [
            "FunctionServiceRole675BB04A",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "FunctionCurrentVersion4E2B2261086ba6102febde15151db28b70bf0e44": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "Function76856677",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "FunctionCurrentVersionAliaslive2D187DC4": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "Function76856677",
        },
        "FunctionVersion": Object {
          "Fn::GetAtt": Array [
            "FunctionCurrentVersion4E2B2261086ba6102febde15151db28b70bf0e44",
            "Version",
          ],
        },
        "Name": "live",
        "ProvisionedConcurrencyConfig": Object {
          "ProvisionedConcurrentExecutions": 1,
        },
      },
      "Type": "AWS::Lambda::Alias",
    },
    "FunctionServiceRole675BB04A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot test: all alarms, alarmPrefix on error dedupeString 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Function76856677": Object {
      "DependsOn": Array [
        "FunctionServiceRole675BB04A",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "{}",
        },
        "FunctionName": "DummyLambda",
        "Handler": "Dummy::handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "FunctionServiceRole675BB04A",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "FunctionServiceRole675BB04A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ScopeTestDummyLambdaFaultCountWarning33B0A193": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Fault count is too high.",
        "AlarmName": "Test-DummyLambda-Fault-Count-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 20,
        "EvaluationPeriods": 20,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Faults",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Sum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 2,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaFaultRateWarningE6A1BB2B": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Fault rate is too high.",
        "AlarmName": "Test-DummyLambda-Fault-Rate-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 10,
        "EvaluationPeriods": 10,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Faults (avg)",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Average",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaIteratorAgeMaxWarning2BC5030F": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Iterator Max Age is too high.",
        "AlarmName": "Test-DummyLambda-Iterator-Age-Max-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Iterator Age",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "IteratorAge",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Maximum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 1000000,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaLatencyP50WarningE50DF463": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "P50 latency is too high.",
        "AlarmName": "Test-DummyLambda-Latency-P50-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 11,
        "EvaluationPeriods": 11,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "P50",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Duration",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "p50",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 110,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaLatencyP90Warning670FFADC": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "P90 latency is too high.",
        "AlarmName": "Test-DummyLambda-Latency-P90-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 22,
        "EvaluationPeriods": 22,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "P90",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Duration",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "p90",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 220,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaLatencyP99WarningDDA8F353": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "P99 latency is too high.",
        "AlarmName": "Test-DummyLambda-Latency-P99-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 33,
        "EvaluationPeriods": 33,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "P99",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Duration",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "p99",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 330,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaMaxTPSWarning0EC2023E": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "TPS is too high.",
        "AlarmName": "Test-DummyLambda-MaxTPS-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 1,
        "EvaluationPeriods": 1,
        "Metrics": Array [
          Object {
            "Expression": "FILL(requests,0) / PERIOD(requests)",
            "Id": "expr_1",
            "Label": "TPS",
          },
          Object {
            "Id": "requests",
            "Label": "Invocations",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaMinTPSWarning30EF1FB4": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "TPS is too low.",
        "AlarmName": "Test-DummyLambda-MinTPS-Warning",
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "EvaluationPeriods": 1,
        "Metrics": Array [
          Object {
            "Expression": "FILL(requests,0) / PERIOD(requests)",
            "Id": "expr_1",
            "Label": "TPS",
          },
          Object {
            "Id": "requests",
            "Label": "Invocations",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 0,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaRunningTasksHighCritical357223A5": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Number of running tasks are too high.",
        "AlarmName": "Test-DummyLambda-Running-Tasks-High-Critical",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Provisioned Concurrency Spillovers",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "ProvisionedConcurrencySpilloverInvocations",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Sum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaRunningTasksHighWarning2A06F60A": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Number of running tasks are too high.",
        "AlarmName": "Test-DummyLambda-Running-Tasks-High-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Concurrent",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "ConcurrentExecutions",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Maximum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaThrottledCountWarning946A5E19": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Throttled count is too high.",
        "AlarmName": "Test-DummyLambda-Throttled-Count-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 20,
        "EvaluationPeriods": 20,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Throttles",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Throttles",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Sum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 2,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaThrottledRateWarning6EB21772": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Throttled rate is too high.",
        "AlarmName": "Test-DummyLambda-Throttled-Rate-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 10,
        "EvaluationPeriods": 10,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Throttles (avg)",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Throttles",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Average",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot test: all alarms, alarmPrefix on latency dedupeString 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Function76856677": Object {
      "DependsOn": Array [
        "FunctionServiceRole675BB04A",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "{}",
        },
        "FunctionName": "DummyLambda",
        "Handler": "Dummy::handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "FunctionServiceRole675BB04A",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "FunctionServiceRole675BB04A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ScopeTestDummyLambdaFaultCountWarning33B0A193": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Fault count is too high.",
        "AlarmName": "Test-DummyLambda-Fault-Count-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 20,
        "EvaluationPeriods": 20,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Faults",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Sum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 2,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaFaultRateWarningE6A1BB2B": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Fault rate is too high.",
        "AlarmName": "Test-DummyLambda-Fault-Rate-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 10,
        "EvaluationPeriods": 10,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Faults (avg)",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Average",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaIteratorAgeMaxWarning2BC5030F": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Iterator Max Age is too high.",
        "AlarmName": "Test-DummyLambda-Iterator-Age-Max-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Iterator Age",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "IteratorAge",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Maximum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 1000000,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaLatencyP50WarningE50DF463": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "P50 latency is too high.",
        "AlarmName": "Test-DummyLambda-Latency-P50-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 11,
        "EvaluationPeriods": 11,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "P50",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Duration",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "p50",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 110,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaLatencyP90Warning670FFADC": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "P90 latency is too high.",
        "AlarmName": "Test-DummyLambda-Latency-P90-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 22,
        "EvaluationPeriods": 22,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "P90",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Duration",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "p90",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 220,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaLatencyP99WarningDDA8F353": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "P99 latency is too high.",
        "AlarmName": "Test-DummyLambda-Latency-P99-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 33,
        "EvaluationPeriods": 33,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "P99",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Duration",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "p99",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 330,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaMaxTPSWarning0EC2023E": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "TPS is too high.",
        "AlarmName": "Test-DummyLambda-MaxTPS-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 1,
        "EvaluationPeriods": 1,
        "Metrics": Array [
          Object {
            "Expression": "FILL(requests,0) / PERIOD(requests)",
            "Id": "expr_1",
            "Label": "TPS",
          },
          Object {
            "Id": "requests",
            "Label": "Invocations",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 20,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaMinTPSWarning30EF1FB4": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "TPS is too low.",
        "AlarmName": "Test-DummyLambda-MinTPS-Warning",
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "EvaluationPeriods": 1,
        "Metrics": Array [
          Object {
            "Expression": "FILL(requests,0) / PERIOD(requests)",
            "Id": "expr_1",
            "Label": "TPS",
          },
          Object {
            "Id": "requests",
            "Label": "Invocations",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 0,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaRunningTasksHighCritical357223A5": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Number of running tasks are too high.",
        "AlarmName": "Test-DummyLambda-Running-Tasks-High-Critical",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Provisioned Concurrency Spillovers",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "ProvisionedConcurrencySpilloverInvocations",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Sum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 5,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaRunningTasksHighWarning2A06F60A": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Number of running tasks are too high.",
        "AlarmName": "Test-DummyLambda-Running-Tasks-High-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Concurrent",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "ConcurrentExecutions",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Maximum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 10,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaThrottledCountWarning946A5E19": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Throttled count is too high.",
        "AlarmName": "Test-DummyLambda-Throttled-Count-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 20,
        "EvaluationPeriods": 20,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Throttles",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Throttles",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Sum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 2,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestDummyLambdaThrottledRateWarning6EB21772": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Throttled rate is too high.",
        "AlarmName": "Test-DummyLambda-Throttled-Rate-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 10,
        "EvaluationPeriods": 10,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Throttles (avg)",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "Function76856677",
                    },
                  },
                ],
                "MetricName": "Throttles",
                "Namespace": "AWS/Lambda",
              },
              "Period": 300,
              "Stat": "Average",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot test: no alarms 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Function76856677": Object {
      "DependsOn": Array [
        "FunctionServiceRole675BB04A",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "{}",
        },
        "FunctionName": "DummyLambda",
        "Handler": "Dummy::handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "FunctionServiceRole675BB04A",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "FunctionServiceRole675BB04A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
