// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`each stack in an app gets its own publisher instance 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Fixed key that does not depend on asset changes",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ScopeSecretsManagerMetricsPublisherLambdaD18CA1CF": Object {
      "DependsOn": Array [
        "ScopeSecretsManagerMetricsPublisherLambdaServiceRoleDefaultPolicy2F7AC509",
        "ScopeSecretsManagerMetricsPublisherLambdaServiceRoleEC4B8B08",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Fixed key that does not depend on asset changes",
        },
        "Description": "Custom metrics publisher for SecretsManager Secrets (MonitoringCDKConstructs)",
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "ScopeSecretsManagerMetricsPublisherLambdaServiceRoleEC4B8B08",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ScopeSecretsManagerMetricsPublisherLambdaLogRetentionBBD27A2A": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "ScopeSecretsManagerMetricsPublisherLambdaD18CA1CF",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ScopeSecretsManagerMetricsPublisherLambdaServiceRoleDefaultPolicy2F7AC509": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "secretsmanager:DescribeSecret",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "cloudwatch:PutMetricData",
              "Condition": Object {
                "StringEquals": Object {
                  "cloudwatch:namespace": "SecretsManager",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ScopeSecretsManagerMetricsPublisherLambdaServiceRoleDefaultPolicy2F7AC509",
        "Roles": Array [
          Object {
            "Ref": "ScopeSecretsManagerMetricsPublisherLambdaServiceRoleEC4B8B08",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ScopeSecretsManagerMetricsPublisherLambdaServiceRoleEC4B8B08": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ScopeSecretsManagerMetricsPublisherRuleForStack1Secret175B2D0483CD4B237": Object {
      "Properties": Object {
        "ScheduleExpression": "cron(0 * * * ? *)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "ScopeSecretsManagerMetricsPublisherLambdaD18CA1CF",
                "Arn",
              ],
            },
            "Id": "Target0",
            "Input": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"secretId\\":\\"",
                  Object {
                    "Ref": "Secret1C2786A59",
                  },
                  "\\"}",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ScopeSecretsManagerMetricsPublisherRuleForStack1Secret175B2D048AllowEventRuleStack1ScopeSecretsManagerMetricsPublisherLambda436901E8F52F91E8": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ScopeSecretsManagerMetricsPublisherLambdaD18CA1CF",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "ScopeSecretsManagerMetricsPublisherRuleForStack1Secret175B2D0483CD4B237",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Secret1C2786A59": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "GenerateSecretString": Object {},
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`each stack in an app gets its own publisher instance 2`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot test 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Fixed key that does not depend on asset changes",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ScopeSecretsManagerMetricsPublisherLambdaD18CA1CF": Object {
      "DependsOn": Array [
        "ScopeSecretsManagerMetricsPublisherLambdaServiceRoleDefaultPolicy2F7AC509",
        "ScopeSecretsManagerMetricsPublisherLambdaServiceRoleEC4B8B08",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Fixed key that does not depend on asset changes",
        },
        "Description": "Custom metrics publisher for SecretsManager Secrets (MonitoringCDKConstructs)",
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "ScopeSecretsManagerMetricsPublisherLambdaServiceRoleEC4B8B08",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ScopeSecretsManagerMetricsPublisherLambdaLogRetentionBBD27A2A": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "ScopeSecretsManagerMetricsPublisherLambdaD18CA1CF",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ScopeSecretsManagerMetricsPublisherLambdaServiceRoleDefaultPolicy2F7AC509": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "secretsmanager:DescribeSecret",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "cloudwatch:PutMetricData",
              "Condition": Object {
                "StringEquals": Object {
                  "cloudwatch:namespace": "SecretsManager",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ScopeSecretsManagerMetricsPublisherLambdaServiceRoleDefaultPolicy2F7AC509",
        "Roles": Array [
          Object {
            "Ref": "ScopeSecretsManagerMetricsPublisherLambdaServiceRoleEC4B8B08",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ScopeSecretsManagerMetricsPublisherLambdaServiceRoleEC4B8B08": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ScopeSecretsManagerMetricsPublisherRuleForSecret1A5D12B4E": Object {
      "Properties": Object {
        "ScheduleExpression": "cron(0 * * * ? *)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "ScopeSecretsManagerMetricsPublisherLambdaD18CA1CF",
                "Arn",
              ],
            },
            "Id": "Target0",
            "Input": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"secretId\\":\\"",
                  Object {
                    "Ref": "Secret1C2786A59",
                  },
                  "\\"}",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ScopeSecretsManagerMetricsPublisherRuleForSecret1AllowEventRuleScopeSecretsManagerMetricsPublisherLambda0D36FFC4CE1F11A4": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ScopeSecretsManagerMetricsPublisherLambdaD18CA1CF",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "ScopeSecretsManagerMetricsPublisherRuleForSecret1A5D12B4E",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ScopeSecretsManagerMetricsPublisherRuleForSecret2AllowEventRuleScopeSecretsManagerMetricsPublisherLambda0D36FFC445562ECF": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ScopeSecretsManagerMetricsPublisherLambdaD18CA1CF",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "ScopeSecretsManagerMetricsPublisherRuleForSecret2FFD62269",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ScopeSecretsManagerMetricsPublisherRuleForSecret2FFD62269": Object {
      "Properties": Object {
        "ScheduleExpression": "cron(0 * * * ? *)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "ScopeSecretsManagerMetricsPublisherLambdaD18CA1CF",
                "Arn",
              ],
            },
            "Id": "Target0",
            "Input": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"secretId\\":\\"",
                  Object {
                    "Ref": "Secret244EA3BB5",
                  },
                  "\\"}",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ScopeSecretsManagerMetricsPublisherRuleForSecret360EACBF8": Object {
      "Properties": Object {
        "ScheduleExpression": "cron(0 * * * ? *)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "ScopeSecretsManagerMetricsPublisherLambdaD18CA1CF",
                "Arn",
              ],
            },
            "Id": "Target0",
            "Input": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"secretId\\":\\"",
                  Object {
                    "Ref": "Secret30C3714C1",
                  },
                  "\\"}",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ScopeSecretsManagerMetricsPublisherRuleForSecret3AllowEventRuleScopeSecretsManagerMetricsPublisherLambda0D36FFC41F347C6F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ScopeSecretsManagerMetricsPublisherLambdaD18CA1CF",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "ScopeSecretsManagerMetricsPublisherRuleForSecret360EACBF8",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ScopeTestSecret1DaysSinceUpdateCritical9B2CE120": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Number of days since update is too high.",
        "AlarmName": "Test-Secret1-DaysSinceUpdate-Critical",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Days",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "SecretName",
                    "Value": Object {
                      "Fn::Join": Array [
                        "-",
                        Array [
                          Object {
                            "Fn::Select": Array [
                              0,
                              Object {
                                "Fn::Split": Array [
                                  "-",
                                  Object {
                                    "Fn::Select": Array [
                                      6,
                                      Object {
                                        "Fn::Split": Array [
                                          ":",
                                          Object {
                                            "Ref": "Secret1C2786A59",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                          Object {
                            "Fn::Select": Array [
                              1,
                              Object {
                                "Fn::Split": Array [
                                  "-",
                                  Object {
                                    "Fn::Select": Array [
                                      6,
                                      Object {
                                        "Fn::Split": Array [
                                          ":",
                                          Object {
                                            "Ref": "Secret1C2786A59",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      ],
                    },
                  },
                ],
                "MetricName": "DaysSinceLastChange",
                "Namespace": "SecretsManager",
              },
              "Period": 86400,
              "Stat": "Maximum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 60,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestSecret1DaysSinceUpdateWarningE904F18E": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Number of days since update is too high.",
        "AlarmName": "Test-Secret1-DaysSinceUpdate-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Days",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "SecretName",
                    "Value": Object {
                      "Fn::Join": Array [
                        "-",
                        Array [
                          Object {
                            "Fn::Select": Array [
                              0,
                              Object {
                                "Fn::Split": Array [
                                  "-",
                                  Object {
                                    "Fn::Select": Array [
                                      6,
                                      Object {
                                        "Fn::Split": Array [
                                          ":",
                                          Object {
                                            "Ref": "Secret1C2786A59",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                          Object {
                            "Fn::Select": Array [
                              1,
                              Object {
                                "Fn::Split": Array [
                                  "-",
                                  Object {
                                    "Fn::Select": Array [
                                      6,
                                      Object {
                                        "Fn::Split": Array [
                                          ":",
                                          Object {
                                            "Ref": "Secret1C2786A59",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      ],
                    },
                  },
                ],
                "MetricName": "DaysSinceLastChange",
                "Namespace": "SecretsManager",
              },
              "Period": 86400,
              "Stat": "Maximum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 30,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestSecret2DaysSinceUpdateWarning8E036A7A": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Number of days since update is too high.",
        "AlarmName": "Test-Secret2-DaysSinceUpdate-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Days",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "SecretName",
                    "Value": Object {
                      "Fn::Join": Array [
                        "-",
                        Array [
                          Object {
                            "Fn::Select": Array [
                              0,
                              Object {
                                "Fn::Split": Array [
                                  "-",
                                  Object {
                                    "Fn::Select": Array [
                                      6,
                                      Object {
                                        "Fn::Split": Array [
                                          ":",
                                          Object {
                                            "Ref": "Secret244EA3BB5",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                          Object {
                            "Fn::Select": Array [
                              1,
                              Object {
                                "Fn::Split": Array [
                                  "-",
                                  Object {
                                    "Fn::Select": Array [
                                      6,
                                      Object {
                                        "Fn::Split": Array [
                                          ":",
                                          Object {
                                            "Ref": "Secret244EA3BB5",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      ],
                    },
                  },
                ],
                "MetricName": "DaysSinceLastRotation",
                "Namespace": "SecretsManager",
              },
              "Period": 86400,
              "Stat": "Maximum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 30,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ScopeTestSecret3DaysSinceUpdateWarning71C58659": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmDescription": "Number of days since update is too high.",
        "AlarmName": "Test-Secret3-DaysSinceUpdate-Warning",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 3,
        "EvaluationPeriods": 3,
        "Metrics": Array [
          Object {
            "Id": "m1",
            "Label": "Days",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "SecretName",
                    "Value": Object {
                      "Fn::Join": Array [
                        "-",
                        Array [
                          Object {
                            "Fn::Select": Array [
                              0,
                              Object {
                                "Fn::Split": Array [
                                  "-",
                                  Object {
                                    "Fn::Select": Array [
                                      6,
                                      Object {
                                        "Fn::Split": Array [
                                          ":",
                                          Object {
                                            "Ref": "Secret30C3714C1",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                          Object {
                            "Fn::Select": Array [
                              1,
                              Object {
                                "Fn::Split": Array [
                                  "-",
                                  Object {
                                    "Fn::Select": Array [
                                      6,
                                      Object {
                                        "Fn::Split": Array [
                                          ":",
                                          Object {
                                            "Ref": "Secret30C3714C1",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      ],
                    },
                  },
                ],
                "MetricName": "DaysSinceLastChange",
                "Namespace": "SecretsManager",
              },
              "Period": 86400,
              "Stat": "Maximum",
            },
            "ReturnData": true,
          },
        ],
        "Threshold": 30,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Secret1C2786A59": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "GenerateSecretString": Object {},
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "Secret244EA3BB5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "GenerateSecretString": Object {},
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "Secret30C3714C1": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "GenerateSecretString": Object {},
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
